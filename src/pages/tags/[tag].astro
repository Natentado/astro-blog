---
import BlogPost from '../../components/BlogPost.astro';
import BaseLayout from '../../layouts/BaseLayout.astro';
import type { IBlogPost } from '../../types';

export async function getStaticPaths() {
  const allPosts = await Astro.glob('../posts/*.md') as any;

  const uniqueTags: Array<string> = [...new Set(allPosts.map((post: any) => post.frontmatter.tags).flat())] as Array<string>;
  
  // return [
  //     { params: { tag: "astro" }, props: {posts: allPosts, id: 1} },
  //     { params: { tag: "successes" }, props: {posts: allPosts, id: 2} },
  //     { params: { tag: "community" }, props: {posts: allPosts, id: 3} },
  //     { params: { tag: "blogging" }, props: {posts: allPosts, id: 4} },
  //     { params: { tag: "setbacks" }, props: {posts: allPosts, id: 5} },
  //     { params: { tag: "learning in public" }, props: {posts: allPosts, id: 6} },
  // ];
  return uniqueTags.map((tag) => {
    const filteredPosts = allPosts.filter((post: IBlogPost) => post.frontmatter.tags.includes(tag));

    return {
      params: { tag },
      props: { posts: filteredPosts },
    };
  });
}

const { tag } = Astro.params;
const { posts } = Astro.props;

// const filteredPosts = posts.filter((post: any) => post.frontmatter.tags?.includes(tag));
---

<BaseLayout pageTitle={tag}>
  <p>Posts tagged with {tag}</p>
  <ul>
    {posts.map((post: IBlogPost) => <BlogPost url={post.url} title={post.frontmatter.title}/>)}
  </ul>
</BaseLayout>